image: node:latest

stages:
  - test
  - migration
  - deploy
  - teardown

variables:
  AWS_REGION: us-east-2
before_script:
  - npm install -g serverless
  - FAILURE_MESSAGE="Must define \$AWS_ACCESS_KEY_ID and \$AWS_SECRET_ACCESS_KEY. Add keys to $CI_PROJECT_URL/-/settings/ci_cd"
  - test -z "$AWS_SECRET_ACCESS_KEY" && echo $FAILURE_MESSAGE && exit 1
  - test -z "$AWS_ACCESS_KEY_ID" && echo $FAILURE_MESSAGE && exit 1

###########
# ANCHORS #
###########

.migration_definition: &migration_definition
  stage: migration
  when: manual
  script:
    - echo $NODE_ENV
    - npm install
    - npm run migrate

###########
# develop #
###########

migration dev:
  <<: *migration_definition
  variables:
    NODE_ENV: development
  only:
    - develop

deploy dev:
  stage: deploy
  when: manual
  needs:
    - job: migration dev
  variables:
    NODE_ENV: development
  environment:
    name: develop
    url: "https://${AWS_REGION}.console.aws.amazon.com/lambda/home?region=${AWS_REGION}#/applications/todolist-dev"
    on_stop: teardown dev
  script:
    - npm install --production
    - serverless deploy --stage dev --region $AWS_REGION --verbose
  only:
    - develop
    
teardown dev:
  stage: teardown
  when: manual
  needs:
    - job: deploy dev
  environment:
    name: develop
    action: stop
  script:
    - npm install --production
    - serverless remove --stage dev --region $AWS_REGION --verbose


##############
# production #
##############

migration prod:
  <<: *migration_definition
  variables:
    NODE_ENV: production
  only:
    - master

deploy prod:
  stage: deploy
  when: manual
  needs:
    - job: migration prod
  variables:
    NODE_ENV: production
  environment:
    name: production
    url: "https://${AWS_REGION}.console.aws.amazon.com/lambda/home?region=${AWS_REGION}#/applications/todolist-production"
  script:
    - npm install --production
    - serverless deploy --stage production --region $AWS_REGION --verbose
  only:
    - master