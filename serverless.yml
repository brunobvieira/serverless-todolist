service: todolist

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:stage, 'us-east-2'}
  apiName: todolist
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - ec2:CreateNetworkInterface
        - ec2:DescribeNetworkInterfaces
        - ec2:DeleteNetworkInterface
      Resource:
        - "*"
  environment:
    SECRET: ${env:APP_SECRET, '12345678'}
    DBDIALECT: ${env:DBDIALECT, 'mysql'}
    DBHOST: ${env:DBHOST, 'localhost'}
    DBUSER: ${env:DBUSER, 'admin'}
    DBPASSWORD: ${env:DBPASSWORD, '12345678'}
    DBDATABASE: ${env:DBDATABASE, 'todolist'}
    DBPORT: ${env:DBPORT, '3306'}
  # SECURITY_GROUP_IDS --> security id's  separated by comma ex: export SECURITY_GROUP_IDS=1,2,3,4
  # SUBNET_IDS --> subnet id's  separated by comma ex: export SUBNET_IDS=1,2,3,4
  vpc: ${file(dynamic-vpc.js)}
    # securityGroupIds:
    #   - sg-07df6ee81bd0b35d4ser
    # subnetIds:
    #   - subnet-10a51476
    #   - subnet-122b9749
    #   - subnet-03b6014a


functions: ${file(dynamic-handlers.js)}

plugins:
  - serverless-offline